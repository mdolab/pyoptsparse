!    -*- f90 -*-
!
! Originally written by Joaquim R. R. A. Martins 2000
! Updates by Patrick LeGresley 2003-2005
! Last updated: February 13, 2005
! Tested to work with F2PY Version 2.45.241_1926 on:
!         Mac OS X with xlf
! Modified for Snopt 7 by C. Marriage 2007
!
python module snoptc__user__routines
    interface snoptc_user_interface
	    subroutine userfg( mode, nnObj, nnCon, nnJac, nnL, neJac, x, fObj, gObj, fCon, gCon, nState, cu, lencu, iu, leniu, ru, lenru )
		integer intent(in,out) :: mode
		integer intent(in) :: nnObj
                integer intent(in) :: nnCon
                integer intent(in) :: nnJac
                integer intent(in) :: nnL
                integer intent(in) :: neJac
                integer intent(in) :: nState
		double precision intent(in) :: x(nnL)
                double precision intent(in, out) :: fObj
                double precision intent(in, out) :: gObj(nnObj)
                double precision intent(in, out) :: fCon(nnCon)
                double precision intent(in, out) :: gCon(neJac)
		character*8 intent(in) :: cu(lencu)
                integer intent(in) :: lencu
                integer intent(in) :: iu(leniu)
                integer intent(in) :: leniu
                double precision intent(in) :: ru(lenru)
                integer intent(in) :: lenru
        end subroutine userfg
        subroutine snstop(iabort,ktcond,mjrprtlvl,minimize,m,maxs,n,nb,nncon0,nncon,nnobj0,nnobj,ns,itn,nmajor,nminor,nswap,condzhz,iobj,scaleobj,objadd,fobj,fmerit,penparm,step,primalinf,dualinf,maxvi,maxvirel,hs,nej,nlocj,locj,indj,jcol,negcon,scales,bl,bu,fx,fcon,gcon,gobj,ycon,pi,rc,rg,x,cu,lencu,iu,leniu,ru,lenru,cw,lencw,iw,leniw,rw,lenrw) ! in test.f
            integer, intent(out) :: iabort
            logical dimension(2) :: ktcond
            integer :: mjrprtlvl
            integer :: minimize
            integer, optional,check(len(pi)>=m),depend(pi) :: m=len(pi)
            integer, optional,check(len(rg)>=maxs),depend(rg) :: maxs=len(rg)
            integer :: n
            integer, optional,check(len(hs)>=nb),depend(hs) :: nb=len(hs)
            integer, optional,check(len(fx)>=nncon0),depend(fx) :: nncon0=len(fx)
            integer :: nncon
            integer, optional,check(len(gobj)>=nnobj0),depend(gobj) :: nnobj0=len(gobj)
            integer :: nnobj
            integer :: ns
            integer :: itn
            integer :: nmajor
            integer :: nminor
            integer :: nswap
            double precision :: condzhz
            integer :: iobj
            double precision :: scaleobj
            double precision :: objadd
            double precision :: fobj
            double precision :: fmerit
            double precision dimension(4) :: penparm
            double precision :: step
            double precision :: primalinf
            double precision :: dualinf
            double precision :: maxvi
            double precision :: maxvirel
            integer dimension(nb) :: hs
            integer, optional,check(len(indj)>=nej),depend(indj) :: nej=len(indj)
            integer, optional,check(len(locj)>=nlocj),depend(locj) :: nlocj=len(locj)
            integer dimension(nlocj) :: locj
            integer dimension(nej) :: indj
            double precision dimension(nej),depend(nej) :: jcol
            integer, optional,check(len(gcon)>=negcon),depend(gcon) :: negcon=len(gcon)
            double precision dimension(nb),depend(nb) :: scales
            double precision dimension(nb),depend(nb) :: bl
            double precision dimension(nb),depend(nb) :: bu
            double precision dimension(nncon0) :: fx
            double precision dimension(nncon0),depend(nncon0) :: fcon
            double precision dimension(negcon) :: gcon
            double precision dimension(nnobj0) :: gobj
            double precision dimension(nncon0),depend(nncon0) :: ycon
            double precision dimension(m) :: pi
            double precision dimension(nb),depend(nb) :: rc
            double precision dimension(maxs) :: rg
            double precision dimension(nb),depend(nb) :: x
            character dimension(lencu,8) :: cu
            integer, optional,check(shape(cu,0)==lencu),depend(cu) :: lencu=shape(cu,0)
            integer dimension(leniu) :: iu
            integer, optional,check(len(iu)>=leniu),depend(iu) :: leniu=len(iu)
            double precision dimension(lenru) :: ru
            integer, optional,check(len(ru)>=lenru),depend(ru) :: lenru=len(ru)
            character dimension(lencw,8) :: cw
            integer, optional,check(shape(cw,0)==lencw),depend(cw) :: lencw=shape(cw,0)
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer, optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snstop
        subroutine snlog(iabort,ktcond,mjrprtlvl,minimize,n,nb,nncon0,nnobj,ns,itn,nmajor,nminor,nswap,condzhz,iobj,scaleobj,objadd,fobj,fmerit,penparm,step,primalinf,dualinf,maxvi,maxvirel,hs,nej,nlocj,locj,indj,jcol,scales,bl,bu,fx,fcon,ycon,x,cu,lencu,iu,leniu,ru,lenru,cw,lencw,iw,leniw,rw,lenrw) ! in test.f
            integer :: iabort
            logical dimension(2) :: ktcond
            integer :: mjrprtlvl
            integer :: minimize
            integer :: n
            integer, optional,check(len(hs)>=nb),depend(hs) :: nb=len(hs)
            integer, optional,check(len(fx)>=nncon0),depend(fx) :: nncon0=len(fx)
            integer :: nnobj
            integer :: ns
            integer :: itn
            integer :: nmajor
            integer :: nminor
            integer :: nswap
            double precision :: condzhz
            integer :: iobj
            double precision :: scaleobj
            double precision :: objadd
            double precision :: fobj
            double precision :: fmerit
            double precision dimension(4) :: penparm
            double precision :: step
            double precision :: primalinf
            double precision :: dualinf
            double precision :: maxvi
            double precision :: maxvirel
            integer dimension(nb) :: hs
            integer, optional,check(len(indj)>=nej),depend(indj) :: nej=len(indj)
            integer, optional,check(len(locj)>=nlocj),depend(locj) :: nlocj=len(locj)
            integer dimension(nlocj) :: locj
            integer dimension(nej) :: indj
            double precision dimension(nej),depend(nej) :: jcol
            double precision dimension(nb),depend(nb) :: scales
            double precision dimension(nb),depend(nb) :: bl
            double precision dimension(nb),depend(nb) :: bu
            double precision dimension(nncon0) :: fx
            double precision dimension(nncon0),depend(nncon0) :: fcon
            double precision dimension(nncon0),depend(nncon0) :: ycon
            double precision dimension(nb),depend(nb) :: x
            character dimension(lencu,8) :: cu
            integer, optional,check(shape(cu,0)==lencu),depend(cu) :: lencu=shape(cu,0)
            integer dimension(leniu) :: iu
            integer, optional,check(len(iu)>=leniu),depend(iu) :: leniu=len(iu)
            double precision dimension(lenru) :: ru
            integer, optional,check(len(ru)>=lenru),depend(ru) :: lenru=len(ru)
            character dimension(lencw,8) :: cw
            integer, optional,check(shape(cw,0)==lencw),depend(cw) :: lencw=shape(cw,0)
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer, optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snlog
        subroutine snlog2(probtype,probtag,elastic,gotr,firstfeas,feasible,justphase1,m,mbs,nnh,ns,jsq,jbr,jsr,linesp,liness,itn,itqp,kprc,lvlobje,pivot,step,ninf,sinf,ninfe,sinfe,wtinf,nonopt,objprt,condzhz,djqprt,rgnorm,kbs,xbs,iw,leniw) ! in test.f
            integer :: probtype
            character*20 :: probtag
            logical :: elastic
            logical :: gotr
            logical :: firstfeas
            logical :: feasible
            logical :: justphase1
            integer :: m
            integer, optional,check(len(kbs)>=mbs),depend(kbs) :: mbs=len(kbs)
            integer :: nnh
            integer :: ns
            integer :: jsq
            integer :: jbr
            integer :: jsr
            integer :: linesp
            integer :: liness
            integer :: itn
            integer :: itqp
            integer :: kprc
            integer :: lvlobje
            double precision :: pivot
            double precision :: step
            integer :: ninf
            double precision :: sinf
            integer :: ninfe
            double precision :: sinfe
            double precision :: wtinf
            integer :: nonopt
            double precision :: objprt
            double precision :: condzhz
            double precision :: djqprt
            double precision :: rgnorm
            integer dimension(mbs) :: kbs
            double precision dimension(mbs),depend(mbs) :: xbs
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
        end subroutine snlog2
        subroutine sqlog(probtype,probtag,elastic,gotr,firstfeas,feasible,justphase1,m,mbs,nnh,ns,jsq,jbr,jsr,linesp,liness,itn,itqp,kprc,lvlobje,pivot,step,ninf,sinf,ninfe,sinfe,wtinf,nonopt,objprt,condzhz,djqprt,rgnorm,kbs,xbs,iw,leniw) ! in test.f
            integer :: probtype
            character*20 :: probtag
            logical :: elastic
            logical :: gotr
            logical :: firstfeas
            logical :: feasible
            logical :: justphase1
            integer :: m
            integer, optional,check(len(kbs)>=mbs),depend(kbs) :: mbs=len(kbs)
            integer :: nnh
            integer :: ns
            integer :: jsq
            integer :: jbr
            integer :: jsr
            integer :: linesp
            integer :: liness
            integer :: itn
            integer :: itqp
            integer :: kprc
            integer :: lvlobje
            double precision :: pivot
            double precision :: step
            integer :: ninf
            double precision :: sinf
            integer :: ninfe
            double precision :: sinfe
            double precision :: wtinf
            integer :: nonopt
            double precision :: objprt
            double precision :: condzhz
            double precision :: djqprt
            double precision :: rgnorm
            integer dimension(mbs) :: kbs
            double precision dimension(mbs),depend(mbs) :: xbs
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
        end subroutine sqlog
    end interface snoptc_user_interface
end python module snoptc__user__routines
python module snopt ! in 
    interface  ! in :snopt
        subroutine openunit(unitnum,filename,filestatus,fileaction,ierror) ! in :snopt:openunit.f
            integer intent(in) :: unitnum
            character*(*) intent(in) :: filename
            character*(*) intent(in) :: filestatus
            character*(*) intent(in) :: fileaction
            integer intent(out) :: ierror
        end subroutine openunit
        subroutine pyflush(unitnum)
          integer unitnum
          return
        end subroutine pyflush
        subroutine closeunit(unitnum) ! in :snopt:closeunit.f
            integer intent(in) :: unitnum
        end subroutine closeunit
        subroutine sninit(iprint,isumm,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            integer :: iprint
            integer :: isumm
            character*8 intent(in,out), dimension(lencw) :: cw
            !integer optional,check(shape(cw,1)==lencw),depend(cw) :: lencw=shape(cw,1)
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine sninit
        subroutine snspec(ispecs,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            integer :: ispecs
            integer intent(out) :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snspec
        subroutine snmemb(iexit,m,n,ne,negcon,nncon,nnjac,nnobj,mincw,miniw,minrw,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            integer :: iexit
            integer :: m
            integer :: n
            integer :: ne
            integer :: negcon
            integer :: nncon
            integer :: nnjac
            integer :: nnobj 
            integer intent(out) :: mincw
            integer intent(out) :: miniw
            integer intent(out) :: minrw
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snmemb
        subroutine snset(buffer,iprint,isumm,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            integer :: iprint
            integer :: isumm
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snset
        subroutine snseti(buffer,ivalue,iprint,isumm,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            integer :: ivalue
            integer :: iprint
            integer :: isumm
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snseti
        subroutine snsetr(buffer,rvalue,iprint,isumm,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            double precision :: rvalue
            integer :: iprint
            integer :: isumm
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snsetr
        subroutine sngetc(buffer,cvalue,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            character*8 intent(out) :: cvalue
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine sngetc
        subroutine sngeti(buffer,ivalue,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            integer intent(out) :: ivalue 
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine sngeti
        subroutine sngetr(buffer,rvalue,inform,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:sn02lib.f
            character*(*) :: buffer
            double precision intent(out) :: rvalue
            integer :: inform
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine sngetr
        subroutine sntitle(title) ! in :snopt:sn02lib.f
            character*30, intent(out) :: title
        end subroutine sntitle
        subroutine snoptc(start,m,n,ne,nname,nncon,nnobj,nnjac,iobj,objadd,prob,userfg,jcol,indj,locj,bl,bu,names,hs,x,pi,rc,inform,mincw,miniw,minrw,ns,ninf,sinf,obj,cu,lencu,iu,leniu,ru,lenru,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:snoptc.f
            use snoptc__user__routines
            character*(*) intent(inout) :: start
            integer optional,check(len(pi)>=m),depend(pi) :: m=len(pi)
            integer optional,check((len(locj)-1)>=n),depend(locj) :: n=(len(locj)-1)
            integer optional,check(len(jcol)>=ne),depend(jcol) :: ne=len(jcol)
            integer :: nncon 
            integer :: nnobj
            integer :: nnjac
            integer :: iobj
            double precision :: objadd
            character*8 :: prob
            external userfg
            double precision dimension(ne) :: jcol
            integer intent(inout), dimension(ne),depend(ne) :: indj
            integer intent(inout), dimension(n + 1) :: locj
            double precision intent(inout), dimension(n+m),depend(m,n) :: bl
            double precision intent(inout), dimension(n+m),depend(m,n) :: bu
            character*8 intent(in), dimension(nname) :: names
            integer optional,check(len(names)==nname),depend(names) :: nname=len(names)
            integer intent(inout), dimension(n+m),depend(m,n) :: hs
            double precision intent(inout), dimension(n+m),depend(m,n) :: x
            double precision intent(inout), dimension(m) :: pi
            double precision intent(inout), dimension(n+m),depend(m,n) :: rc 
            integer intent(inout) :: inform
            integer intent(inout) :: mincw
            integer intent(inout) :: miniw
            integer intent(inout) :: minrw
            integer :: ns
            integer :: ninf
            double precision :: sinf
            double precision intent(inout) :: obj
            character*8 intent(in,out), dimension(lencu) :: cu
            integer optional,check(len(cu)==lencu),depend(cu) :: lencu=len(cu)
            integer dimension(leniu) :: iu
            integer optional,check(len(iu)>=leniu),depend(iu) :: leniu=len(iu)
            double precision dimension(lenru) :: ru
            integer optional,check(len(ru)>=lenru),depend(ru) :: lenru=len(ru)
            character*8 intent(in,out), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snoptc
        subroutine snkerc(start,m,n,ne,nname,nncon,nnobj,nnjac,iobj,objadd,prob,userfg,snlog,snlog2,sqlog,snstop,jcol,indj,locj,bl,bu,names,hs,x,pi,rc,inform,mincw,miniw,minrw,ns,ninf,sinf,obj,cu,lencu,iu,leniu,ru,lenru,cw,lencw,iw,leniw,rw,lenrw) ! in :snopt:snoptc.f
            use snoptc__user__routines
            character*(*) intent(inout) :: start
            integer optional,check(len(pi)>=m),depend(pi) :: m=len(pi)
            integer optional,check((len(locj)-1)>=n),depend(locj) :: n=(len(locj)-1)
            integer optional,check(len(jcol)>=ne),depend(jcol) :: ne=len(jcol)
            integer :: nncon 
            integer :: nnobj
            integer :: nnjac
            integer :: iobj
            double precision :: objadd
            character*8 :: prob
            external userfg,snlog,snlog2,sqlog,snstop
            double precision dimension(ne) :: jcol
            integer intent(inout), dimension(ne),depend(ne) :: indj
            integer intent(inout), dimension(n + 1) :: locj
            double precision intent(inout), dimension(n+m),depend(m,n) :: bl
            double precision intent(inout), dimension(n+m),depend(m,n) :: bu
            character*8 intent(in), dimension(nname) :: names
            integer optional,check(len(names)==nname),depend(names) :: nname=len(names)
            integer intent(inout), dimension(n+m),depend(m,n) :: hs
            double precision intent(inout), dimension(n+m),depend(m,n) :: x
            double precision intent(inout), dimension(m) :: pi
            double precision intent(inout), dimension(n+m),depend(m,n) :: rc 
            integer intent(inout) :: inform
            integer intent(inout) :: mincw
            integer intent(inout) :: miniw
            integer intent(inout) :: minrw
            integer :: ns
            integer :: ninf
            double precision :: sinf
            double precision intent(out) :: obj
            character*8 intent(inplace), dimension(lencu) :: cu
            integer optional,check(len(cu)==lencu),depend(cu) :: lencu=len(cu)
            integer dimension(leniu) :: iu
            integer optional,check(len(iu)>=leniu),depend(iu) :: leniu=len(iu)
            double precision dimension(lenru) :: ru
            integer optional,check(len(ru)>=lenru),depend(ru) :: lenru=len(ru)
            character*8 intent(inplace), dimension(lencw) :: cw
            integer optional,check(len(cw)==lencw),depend(cw) :: lencw=len(cw)
            integer intent(inout), dimension(leniw) :: iw
            integer optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snkerc
        subroutine snlog(iabort,ktcond,mjrprtlvl,minimize,n,nb,nncon0,nnobj,ns,itn,nmajor,nminor,nswap,condzhz,iobj,scaleobj,objadd,fobj,fmerit,penparm,step,primalinf,dualinf,maxvi,maxvirel,hs,nej,nlocj,locj,indj,jcol,scales,bl,bu,fx,fcon,ycon,x,cu,lencu,iu,leniu,ru,lenru,cw,lencw,iw,leniw,rw,lenrw) ! in test.f
            integer :: iabort
            logical dimension(2) :: ktcond
            integer :: mjrprtlvl
            integer :: minimize
            integer :: n
            integer, optional,check(len(hs)>=nb),depend(hs) :: nb=len(hs)
            integer, optional,check(len(fx)>=nncon0),depend(fx) :: nncon0=len(fx)
            integer :: nnobj
            integer :: ns
            integer :: itn
            integer :: nmajor
            integer :: nminor
            integer :: nswap
            double precision :: condzhz
            integer :: iobj
            double precision :: scaleobj
            double precision :: objadd
            double precision :: fobj
            double precision :: fmerit
            double precision dimension(4) :: penparm
            double precision :: step
            double precision :: primalinf
            double precision :: dualinf
            double precision :: maxvi
            double precision :: maxvirel
            integer dimension(nb) :: hs
            integer, optional,check(len(indj)>=nej),depend(indj) :: nej=len(indj)
            integer, optional,check(len(locj)>=nlocj),depend(locj) :: nlocj=len(locj)
            integer dimension(nlocj) :: locj
            integer dimension(nej) :: indj
            double precision dimension(nej),depend(nej) :: jcol
            double precision dimension(nb),depend(nb) :: scales
            double precision dimension(nb),depend(nb) :: bl
            double precision dimension(nb),depend(nb) :: bu
            double precision dimension(nncon0) :: fx
            double precision dimension(nncon0),depend(nncon0) :: fcon
            double precision dimension(nncon0),depend(nncon0) :: ycon
            double precision dimension(nb),depend(nb) :: x
            character dimension(lencu,8) :: cu
            integer, optional,check(shape(cu,0)==lencu),depend(cu) :: lencu=shape(cu,0)
            integer dimension(leniu) :: iu
            integer, optional,check(len(iu)>=leniu),depend(iu) :: leniu=len(iu)
            double precision dimension(lenru) :: ru
            integer, optional,check(len(ru)>=lenru),depend(ru) :: lenru=len(ru)
            character dimension(lencw,8) :: cw
            integer, optional,check(shape(cw,0)==lencw),depend(cw) :: lencw=shape(cw,0)
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
            double precision dimension(lenrw) :: rw
            integer, optional,check(len(rw)>=lenrw),depend(rw) :: lenrw=len(rw)
        end subroutine snlog
        subroutine snlog2(probtype,probtag,elastic,gotr,firstfeas,feasible,justphase1,m,mbs,nnh,ns,jsq,jbr,jsr,linesp,liness,itn,itqp,kprc,lvlobje,pivot,step,ninf,sinf,ninfe,sinfe,wtinf,nonopt,objprt,condzhz,djqprt,rgnorm,kbs,xbs,iw,leniw) ! in test.f
            integer :: probtype
            character*20 :: probtag
            logical :: elastic
            logical :: gotr
            logical :: firstfeas
            logical :: feasible
            logical :: justphase1
            integer :: m
            integer, optional,check(len(kbs)>=mbs),depend(kbs) :: mbs=len(kbs)
            integer :: nnh
            integer :: ns
            integer :: jsq
            integer :: jbr
            integer :: jsr
            integer :: linesp
            integer :: liness
            integer :: itn
            integer :: itqp
            integer :: kprc
            integer :: lvlobje
            double precision :: pivot
            double precision :: step
            integer :: ninf
            double precision :: sinf
            integer :: ninfe
            double precision :: sinfe
            double precision :: wtinf
            integer :: nonopt
            double precision :: objprt
            double precision :: condzhz
            double precision :: djqprt
            double precision :: rgnorm
            integer dimension(mbs) :: kbs
            double precision dimension(mbs),depend(mbs) :: xbs
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
        end subroutine snlog2
        subroutine sqlog(probtype,probtag,elastic,gotr,firstfeas,feasible,justphase1,m,mbs,nnh,ns,jsq,jbr,jsr,linesp,liness,itn,itqp,kprc,lvlobje,pivot,step,ninf,sinf,ninfe,sinfe,wtinf,nonopt,objprt,condzhz,djqprt,rgnorm,kbs,xbs,iw,leniw) ! in test.f
            integer :: probtype
            character*20 :: probtag
            logical :: elastic
            logical :: gotr
            logical :: firstfeas
            logical :: feasible
            logical :: justphase1
            integer :: m
            integer, optional,check(len(kbs)>=mbs),depend(kbs) :: mbs=len(kbs)
            integer :: nnh
            integer :: ns
            integer :: jsq
            integer :: jbr
            integer :: jsr
            integer :: linesp
            integer :: liness
            integer :: itn
            integer :: itqp
            integer :: kprc
            integer :: lvlobje
            double precision :: pivot
            double precision :: step
            integer :: ninf
            double precision :: sinf
            integer :: ninfe
            double precision :: sinfe
            double precision :: wtinf
            integer :: nonopt
            double precision :: objprt
            double precision :: condzhz
            double precision :: djqprt
            double precision :: rgnorm
            integer dimension(mbs) :: kbs
            double precision dimension(mbs),depend(mbs) :: xbs
            integer dimension(leniw) :: iw
            integer, optional,check(len(iw)>=leniw),depend(iw) :: leniw=len(iw)
        end subroutine sqlog
    end interface 
end python module snopt

! This file was auto-generated with f2py (version:2.37.233-1545).
! See http://cens.ioc.ee/projects/f2py2e/
